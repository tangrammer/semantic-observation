* semantic-observation



** Usage

 #+BEGIN_SRC clojure
 (require '[semantic]
	  '[semantic.observation.type :as observation.type]
	  '[semantic.observation.type.catalog])

 (semantic/observe! :dev/yorba-id :semantic.observation.type/docs 
		    {:documentation/content "Hello yorba docs!"})
 #_{:semantic/subject :dev/yorba-id,
    :semantic/observation #:documentation{:content "Hello yorba docs!"},
    :semantic.observation/type :semantic.observation.type/docs}
 (semantic/read-observation :dev/yorba-id :semantic.observation.type/docs)
 ;;=> #:documentation{:content "Hello yorba docs!"}
 (observation.type/implementers  :semantic.observation.type/docs)
 ;;=> #{:dev/yorba-id}
 (mapv #(semantic/read-observation % :semantic.observation.type/docs) (observation.type/implementers  :semantic.observation.type/docs))
 ;;=> [#:documentation{:content "Hello yorba docs!"}]
 (semantic/observe! :dev/yorba-foo :semantic.observation.type/docs 
		    {:documentation/content "Hello yorba foo!"})
 #_{:semantic/subject :dev/yorba-foo,
    :semantic/observation #:documentation{:content "Hello yorba foo!"},
    :semantic.observation/type :semantic.observation.type/docs}
 (mapv #(semantic/read-observation % :semantic.observation.type/docs) (observation.type/implementers  :semantic.observation.type/docs))
 ;;=> [#:documentation{:content "Hello yorba docs!"} #:documentation{:content "Hello yorba foo!"}]
 #+END_SRC


** License

https://opensource.org/licenses/MIT
